% This test can only be run from ProvaServiceTest.java

:- eval(producer()).

producer() :-
	println(["==========Service eventing test: producer=========="]),

	sendMsg(XID,osgi,broker,advertise,mult2(X)),
	reactor().

reactor() :-
	rcvMsg(Topic,Protocol,Broker,start,Stream),
	println(["producer[",Topic,"]: production started ",Stream]),
	$Count.incrementAndGet(),
	produce(Topic,Stream).

produce(Topic,Stream) :-
	% Send all the test messages from a separate thread
	switch_thread(),
	sendMsg(Topic,osgi,Topic,data,mult2(1)),
	% Wait synchronously, could have waited asynchronously instead
	java.lang.Thread.sleep(2000L),
	% The second event will be received by producer as it renews the lease every 1/2 second (see subscriber.prova)
	sendMsg(Topic,osgi,Topic,data,mult2(1)).

switch_thread() :-
	sendMsgSync(XID,task,0,switch,[]),
	rcvMsg(XID,task,From,switch,[]).
