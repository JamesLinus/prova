% This test can only be run from ProvaMessagingTest.java as it requires an AtomicLong count passed a global constant.

:- eval(msg002()).

msg002() :-
	println(["==========Messaging test 002=========="]),

	% Only one message will be received here as the reaction disappears after the first message is consumed
	rcvMsg(XID,self,From,inform,a(I)),
	println(["Received: ",rcvMsg(XID,self,From,inform,a(I))],""),
	Count=$Count,
	Count.incrementAndGet().
msg002() :-
	for(I,1,2),
	sendMsg(XID,self,0,inform,a(I)),
	println(["Sent: ",sendMsg(XID,self,0,inform,a(I))],"").

for(From,From,From) :- !.
for(From,From,To) :-
	From<=To.
for(I,From,To) :-
	From2=From+1,
	for(I,From2,To).

% This outputs:
% ==========Messaging test 002==========
% Sent: [sendMsg,prova1,self,0,inform,[a,1]]
% Sent: [sendMsg,prova2,self,0,inform,[a,2]]
% Received: [rcvMsg,prova1,self,0,inform,[a,1]]
