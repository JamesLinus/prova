% Test asynchronous processing in Java threads with returns.
% Does not work anymore in "old" Prova.
% In Prova "reloaded", longcalc requires a long so "2L" is used for representing a Long.

:- eval(test_spawn()).

test_spawn() :-
	println(["==========test spawn=========="]),

	P=ws.prova.examples.Portfolio("IBM"),
	% P.longcalc(1L) is an instance method that takes a Long.
	% It takes 1 seconds to complete and returns a Boolean.
	spawn(XID,P,longcalc,1L),
	% Ret will contain a returned object in a list,
	%    a Boolean.TRUE in this case.
	% If a called method was void or returned null,
	%    Ret would have contained a string 'null'. 
	rcvMsg(XID,self,Me,return,Ret),
	println(Ret),
	$Count.incrementAndGet().
test_spawn() :-
	sendMsg(XID,self,0,test,t()),
	% java.lang.Thread.sleep(1000L) is a static method running for 1 seconds
	spawn(XID,java.lang.Thread,sleep,1000L),
	% If the method returns void or returns null, return is instantiated with
	%    an Integer 0
	rcvMsg(XID,self,Me,return,Ret),
	println([Ret]),
	println(["========test complete========="]),
	$Count.incrementAndGet().
